from django.db import models

class Direccion(models.Model):
    calle = models.CharField(max_length=30)
    numero = models.CharField(max_length=6)
    piso = models.SmallIntegerField()
    departamento = models.CharField(max_length=3)
    
class Paciente(models.Model):
    nombre = models.CharField(max_length=40, null=True, blank=True)
    apellido = models.CharField(max_length=40, null=True, blank=True)
   # fechaNacimiento=models.DateField(null=True, blank=True)
   # direccion = models.ForeignKey(Direccion, null=True, blank=True)
    telefono = models.CharField(max_length= 35, null=True, blank=True)
    historiaClinica = models.CharField(max_length= 20, null=True, blank=True)
    
    def __unicode__(self):
        return self.apellido + ", " + self.nombre
class Medico(models.Model):
    codigo = models.IntegerField(unique = True, null=False, blank=False)
    nombre = models.CharField(max_length = 40)
    def __unicode__(self):
        return str(self.id)
        
from grid import Grid

class MedicoGrid(Grid):
 class Meta:
  model = Medico
  
class Diagnostico(models.Model):
    codigo = models.IntegerField(unique = True)
    nombre = models.CharField(max_length = 60)
    def __unicode__(self):
        return self.nombre
class ObraSocial(models.Model):
     codigo = models.IntegerField(unique = True, null=False, blank=False)
     nombre = models.CharField(max_length= 50)
     def __unicode__(self):
        return self.nombre+str(self.codigo)
        
class TipoPreparacion(models.Model):
     codigo = models.IntegerField(unique = True, null=False, blank=False)
     nombre = models.CharField(max_length= 50)

class ExtensionAnatomica(models.Model):
     codigo = models.IntegerField(unique = True, null=False, blank=False)
     nombre = models.CharField(max_length= 50)
     
class Complicacion(models.Model):
     codigo = models.IntegerField(unique = True, null=False, blank=False)
     nombre = models.CharField(max_length= 50)

class Terapeutica(models.Model):
     codigo = models.IntegerField(unique = True, null=False, blank=False)
     nombre = models.CharField(max_length= 50)

class VCC(models.Model):
    nroEstudio = models.IntegerField(unique = True, null=False, blank=False)
    paciente = models.ForeignKey(Paciente, related_name = '+')
    fecha = models.DateTimeField()
    hora = models.TimeField()
    internado = models.BooleanField()
    sedacion = models.BooleanField()
    tiempoTotal = models.SmallIntegerField() 
    tiempoRetirada = models.SmallIntegerField()
    sexo = models.SmallIntegerField()
    ObraSocial= models.ForeignKey(ObraSocial, related_name = '+')
    solicitante = models.CharField(max_length = 50)
    endoscopista = models.ForeignKey(Medico)
    asistente = models.ForeignKey(Medico, related_name = '+')
    anestesista = models.ForeignKey(Medico, related_name = '+')
    motivo = models.TextField()
    tacto = models.TextField()
    boston = models.SmallIntegerField()
    intubacionCecal = models.BooleanField()
    tipoPreparacion = models.ForeignKey(TipoPreparacion, related_name = "+")
    extensionAnatomica = models.ForeignKey(ExtensionAnatomica, related_name = "+")
    hallazgo = models.TextField()
    complicacion = models.ForeignKey(Complicacion, related_name = "+")
    diagnostico1 = models.ForeignKey(Diagnostico, related_name = "+")
    diagnostico2 = models.ForeignKey(Diagnostico, related_name = "+")
    diagnostico3 = models.ForeignKey(Diagnostico, related_name = "+")
    diagnostico4 = models.ForeignKey(Diagnostico, related_name = "+")
    polipo = models.BooleanField()
    terapeutica = models.ForeignKey(Terapeutica, related_name = "+")
    biopsia = models.BooleanField()
    marcacionTinta = models.BooleanField()
    comentario = models.TextField()
    


class Contact(models.Model):
    name = models.CharField(max_length=80)

    def __unicode__(self):
        return self.name

class PhoneNo(models.Model):
    contact = models.ForeignKey(Contact)
    phone_no = models.CharField(max_length=20)
    phone_type = models.CharField(max_length=10)

    def __unicode__(self):
        return self.phone_no
    
    


class Complicacion(models.Model):
    codigo = models.IntegerField(unique = True)
    nombre = models.CharField(max_length = 60)
    def __unicode__(self):
        return (self.codigo) + self.nombre
